import{_ as i,c as a,o as t,aA as n}from"./chunks/framework.foXtKhPo.js";const p="/ChainsMakie.jl/dev/assets/wovicut.DBAXOIiq.png",E=JSON.parse('{"title":"Composing plots","description":"","frontmatter":{},"headers":[],"relativePath":"composing_plots.md","filePath":"composing_plots.md","lastUpdated":null}'),e={name:"composing_plots.md"};function h(l,s,o,k,d,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="Composing-plots" tabindex="-1">Composing plots <a class="header-anchor" href="#Composing-plots" aria-label="Permalink to &quot;Composing plots {#Composing-plots}&quot;">â€‹</a></h1><p>ChainsMakie allows you to compose custom summary plots by passing two or more of the plotting functions exported by ChainsMakie to <code>plot</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChainsMakie, CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MCMCChains</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chains</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chains </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Chains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:A</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:B</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:C</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chains, trankplot!, chainshist!, meanplot!)</span></span></code></pre></div><p><img src="`+p+'" alt="" width="800px" height="660px"></p><p>All functions passed must be mutating versions of the plotting functions, i.e., they must end in <code>!</code>. In addition, for <code>density</code> and <code>hist</code> it is currently required to pass their specific <code>chains</code>-prefixed recipes.</p><p>For a list of the supported functions, see <a href="/ChainsMakie.jl/dev/api#MakieCore.plot-Tuple{MCMCChains.Chains, Any}"><code>plot</code></a>.</p>',6)]))}const g=i(e,[["render",h]]);export{E as __pageData,g as default};
